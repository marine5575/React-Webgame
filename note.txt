[2-1 React Hooks 사용하기]
Functional Component: setState, ref 같은거 안 쓸 때 사용했었음
hooks: Class component에서 사용했던 setState, ref를 함수에서도 사용할 수 있게 해줌
state를 하나씩 분리함
state는 항상 component 안에 있어야 됨
class에서는 input을 먼저 선언하고 사용해서 DOM에 접근하고, hooks에서는 React.useRef() 사용!
그리고 current가 하나 더 붙는다

[2-2 Class와 Hooks 비교하기]
Hooks가 더 간결
but state를 바꾸면 함수를 통째로 다시 생성되기 때문에 조금 더 느림
react에서는 html tag의 class를 사용할 수 x  but class->className
html tag의 for도 htmlFor로 변경!
this.setState와는 다르게 일일이 바꿔줘야 함
함수는 옛날 state를 사용하는 경우 사용함!

[2-3 웹팩 설치하기]
Node는 서버가 아님! 그저 JS 실행기일 뿐!
개발할 때만 webpack 필요 x

* 참고:
$ npm init
$ npm i react react-dom
$ npm i -D webpack webpack-cli


[2-4 모듈 시스템과 웹팩 설정]
html에서는 js 파일 하나만 인식
다른 파일에서 불러오는 것은 webpack에서 알아서 인식하기 때문에 불려지는 것들은 일일이 쓰지 않아도 ok
확장자 모두 쓰기 귀찮을 때는 resolve 사용!
